version: "3.9"

services:
  reverse-proxy:
    image: nginx:1.23.4-alpine
    volumes:
      - /home/ubuntu/reverse-proxy/www:/var/www/html
      - /home/ubuntu/reverse-proxy/certs:/etc/letsencrypt
      - /home/ubuntu/cod2/servers:/mnt/servers
    configs:
      - source: nginx
        target: /etc/nginx/nginx.conf
    ports:
      - target: 443
        published: 443
        protocol: tcp
      - target: 80
        published: 80
        protocol: tcp
    deploy:
      restart_policy:
        condition: any
        delay: 5s
    
  certbot-init:
    image: certbot/certbot:latest
    volumes:
      - /home/ubuntu/reverse-proxy/certs:/etc/letsencrypt
      - /home/ubuntu/reverse-proxy/www:/var/www/html
    environment:
      - LETS_ENCRYPT_DOMAINS=${LETS_ENCRYPT_DOMAINS}
      - LETS_ENCRYPT_EMAIL=${LETS_ENCRYPT_EMAIL}
    entrypoint: /bin/sh
    command: >
      -c "
      mkdir -p /var/www/html/.well-known/acme-challenge &&
      chmod -R 755 /var/www/html &&
      
      if [ ! -d /etc/letsencrypt/live/mynl.pl ]; then
        certbot certonly --webroot --webroot-path=/var/www/html \\
          --email $${LETS_ENCRYPT_EMAIL} \\
          --domains $${LETS_ENCRYPT_DOMAINS//,/ -d } \\
          --agree-tos --no-eff-email \\
          --non-interactive
      else
        echo \"Certificate exists, skipping initial request\"
      fi &&
      exit 0
      "
    deploy:
      restart_policy:
        condition: on-failure
        max_attempts: 2
  
  certbot-renew:
    image: certbot/certbot:latest
    volumes:
      - /home/ubuntu/reverse-proxy/certs:/etc/letsencrypt
      - /home/ubuntu/reverse-proxy/www:/var/www/html
    depends_on:
      - certbot-init
    entrypoint: "/bin/sh"
    command: >
      -c "trap exit TERM; 
      while :; do
        certbot renew --webroot --webroot-path=/var/www/html --quiet;
        echo \"$$(date): Renewal check complete. Next check in 24 hours.\";
        sleep 24h & wait $$!;
      done;"
    deploy:
      restart_policy:
        condition: any
        delay: 10s

configs:
  nginx:
    external: true
    name: nginx_static

networks:
  default:
    name: stack_network
    external: true
