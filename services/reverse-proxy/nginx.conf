events {}

http {
    include       /etc/nginx/mime.types;
    default_type  application/octet-stream;
    resolver 127.0.0.11 valid=30s; # Docker's internal DNS resolver

    proxy_max_temp_file_size 0;
    sendfile           on;
    sendfile_max_chunk 1m;
    tcp_nopush on;
    tcp_nodelay       on;
    keepalive_timeout 65;
    
    # SSL settings
    ssl_protocols TLSv1.2 TLSv1.3;
    ssl_prefer_server_ciphers on;
    ssl_session_cache shared:SSL:10m;
    ssl_session_timeout 10m;
    ssl_ciphers 'HIGH:!aNULL:!MD5';
    
    # HTTP servers
    server {
        listen 80;
        server_name fastdl.mynl.pl pma.mynl.pl ds.mynl.pl mynl.pl api.mynl.pl monitoring.mynl.pl;

        # Let's Encrypt webroot verification
        location ^~ /.well-known/acme-challenge/ {
            default_type "text/plain";
            root /var/www/html;
            try_files $uri =404;
        }
        
        # Redirect all other HTTP traffic to HTTPS
        location / {
            return 301 https://$host$request_uri;
        }
    }

    # HTTPS servers
    server {
        listen 443 ssl;
        server_name fastdl.mynl.pl;

        ssl_certificate /etc/letsencrypt/live/mynl.pl/fullchain.pem;
        ssl_certificate_key /etc/letsencrypt/live/mynl.pl/privkey.pem;
        
        location ~ ^/(?<project>[^/]+)/nl/(?<file>.+\.iwd)$ {
            root /mnt/servers;
            try_files /$project/nl/$file /$project/library/iwds/$file =404;
        }
    }

    server {
        listen 443 ssl;
        server_name pma.mynl.pl;

        ssl_certificate /etc/letsencrypt/live/mynl.pl/fullchain.pem;
        ssl_certificate_key /etc/letsencrypt/live/mynl.pl/privkey.pem;

        location / {
            set $upstream pma;
            proxy_pass http://$upstream;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
        }
    }

    server {
        listen 443 ssl;
        server_name ds.mynl.pl;

        ssl_certificate /etc/letsencrypt/live/mynl.pl/fullchain.pem;
        ssl_certificate_key /etc/letsencrypt/live/mynl.pl/privkey.pem;

        location / {
            return 301 https://discord.gg/37UBvysKQ5;
        }
    }

    server {
        listen 443 ssl;
        server_name mynl.pl;

        ssl_certificate /etc/letsencrypt/live/mynl.pl/fullchain.pem;
        ssl_certificate_key /etc/letsencrypt/live/mynl.pl/privkey.pem;

        location / {
            set $upstream nl-app;
            proxy_pass http://$upstream;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
        }
    }

    server {
        listen 443 ssl;
        server_name monitoring.mynl.pl;

        ssl_certificate /etc/letsencrypt/live/mynl.pl/fullchain.pem;
        ssl_certificate_key /etc/letsencrypt/live/mynl.pl/privkey.pem;

        location / {
            set $upstream nl-monitoring;
            proxy_pass http://$upstream;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-Host $host;
            proxy_set_header X-Forwarded-Port 443;
            proxy_set_header X-Forwarded-Path $uri;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
        }
    }

    server {
        listen 443 ssl;
        server_name api.mynl.pl;

        ssl_certificate /etc/letsencrypt/live/mynl.pl/fullchain.pem;
        ssl_certificate_key /etc/letsencrypt/live/mynl.pl/privkey.pem;

        location / {
            set $upstream nl-api;
            proxy_pass http://$upstream;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
        }
    }
}